pipeline:
  database:
    image: mariadb
    detach: true
    environment:
      - MYSQL_ROOT_PASSWORD=pass
      - MYSQL_USER=wp
      - MYSQL_PASSWORD=wp
      - MYSQL_DATABASE=wordpress_test
    when:
      event: push

  changelog:
    image: limestreet/apache-php-7
    commands:
      - apt-get update && apt-get install -y jq
      - CURRENT_WP_VERSION_API=`curl https://api.wordpress.org/core/version-check/1.7/ | jq '.["offers"][0].current'`
      - CURRENT_WP_VERSION=`echo "$CURRENT_WP_VERSION_API" | sed 's/"//g'`
      - echo $CURRENT_WP_VERSION
      - TESTED_UP_TO_WP_VERSION_LINE=$(grep -Po "Tested\ up\ to:\s?\s?\d\d?\.\d\d?\.?\d?\d?.*" $PWD/readme.txt)
      - TESTED_UP_TO_WP_VERSION=$(echo $TESTED_UP_TO_WP_VERSION_LINE | grep -Po "\d\d?\.\d\d?\.?\d?\d?")
      - echo $TESTED_UP_TO_WP_VERSION
      - if [ $TESTED_UP_TO_WP_VERSION != $CURRENT_WP_VERSION ]; then echo "Please test with latest WP version - $CURRENT_WP_VERSION instead of $TESTED_UP_TO_WP_VERSION" && exit 1 ;fi
    when:
      event: push

  codetest:
    image: limestreet/php-cli
    environment:
      - PHPCS_DIR=/tmp/phpcs
      - WPCS_DIR=/tmp/sniffs/WordPress-Coding-Standards
      - PHPCompatibility=/tmp/sniffs/PHPCompatibility
      - PHPCompatibilityWP=/tmp/sniffs/PHPCompatibilityWP
      - PHPCompatibilityParagonie=/tmp/sniffs/PHPCompatibilityParagonie
    commands:
      - git clone -b master --depth 1 https://github.com/squizlabs/PHP_CodeSniffer.git $PHPCS_DIR
      - git clone -b master --depth 1 https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards.git $WPCS_DIR
      - git clone -b master --depth 1 https://github.com/wimg/PHPCompatibility.git $PHPCompatibility
      - git clone -b master --depth 1 https://github.com/PHPCompatibility/PHPCompatibilityWP.git $PHPCompatibilityWP
      - git clone -b master --depth 1 https://github.com/PHPCompatibility/PHPCompatibilityParagonie $PHPCompatibilityParagonie
      - $PHPCS_DIR/bin/phpcs --config-set installed_paths $WPCS_DIR,$PHPCompatibility,$PHPCompatibilityWP,$PHPCompatibilityParagonie
      - $PHPCS_DIR/bin/phpcs -p -s -v -n . --standard=./phpcs.ruleset.xml --extensions=php --ignore=*/node_modules/*,*/vendor/*,class-tgm-plugin-activation.php,class-media-grabber.php,get-the-image.php
      - jshint .
      - php -v
      - find -L . -name '*.php' -not -path "*node_modules*" -not -path "*vendor*" -not -path "*php-codesniffer*" -not -path ".*" -print0 | xargs -0 -n 1 -P 4 php -l
      - /opt/source/php-5.2.17/bin/php -v
      - find -L . -name '*.php' -not -path "*node_modules*" -not -path "*vendor*" -not -path "*php-codesniffer*" -not -path ".*" -print0 | xargs -0 -n 1 -P 4 /opt/source/php-5.2.17/bin/php -l
    when:
      event: push

  wptest:
    image: limestreet/apache-php-7
    environment:
      - WP_VERSION=master
      - WP_DEVELOP_DIR=/tmp/wp
    commands:
      #- echo "wptest"
      - php -v
      - find -L . -name '*.php' -not -path "*node_modules*" -not -path "*vendor*" -not -path "*php-codesniffer*" -not -path ".*" -print0 | xargs -0 -n 1 -P 4 php -l
#      - THEME_SLUG=$(basename $(pwd))
#      - mkdir -p $WP_DEVELOP_DIR
#      - git clone --depth=1 --branch="$WP_VERSION" git://develop.git.wordpress.org/ $WP_DEVELOP_DIR
#      - THEME_DIR=$WP_DEVELOP_DIR/src/wp-content/themes
#      - cd ..
#      - cp -r $THEME_SLUG $THEME_DIR
#      - cd $WP_DEVELOP_DIR
#      - cp wp-tests-config-sample.php wp-tests-config.php
#      - sed -i "s/localhost/database:3306/" wp-tests-config.php
#      - sed -i "s/youremptytestdbnamehere/wordpress_test/" wp-tests-config.php
#      - sed -i "s/yourusernamehere/wp/" wp-tests-config.php
#      - sed -i "s/yourpasswordhere/wp/" wp-tests-config.php
#      - wp cli update --yes --allow-root
#      - wp core config --dbhost=database:3306 --dbname=wordpress_test --dbuser=wp --dbpass=wp --allow-root # --extra-php <<PHP define( 'WP_DEBUG', true ); PHP
#      - wp core install --url=wp.test --title="Local WordPress" --admin_name=admin --admin_email="admin@local.dev" --admin_password="password" --allow-root
#      - wp theme activate $THEME_SLUG --allow-root
#      - wp tgmpa-plugin install --all --activate --allow-root
#      - wp theme activate twentyseventeen --allow-root
#      - wp theme activate $THEME_SLUG --allow-root
#      - wp rewrite structure '/%postname%/' --allow-root
#      - phpunit --group themes
    when:
      event: push

#  performancetest:
#    image: limestreet/apache-php-7
#    commands:
      #- ls -la
      #- printenv
#      - THEME_SLUG=$DRONE_REPO_NAME
#      - THEME_LOW=`echo "$THEME_SLUG" | sed 's/-by-fat//'`
#      - ZERO="0"
#      - SUBDOMAIN="$THEME_LOW$ZERO"
#      - echo $SUBDOMAIN
      #- echo $PWD
      #- THEME_NAME=`echo "$THEME_LOW" | sed 's/\b\w/\U&/'`
#      - npm install --silent
      #- sleep 15
#      - REMOTEURL="http://$SUBDOMAIN.dev.limestreet.pl/wp-content/themes/$THEME_SLUG/style.css"
      #- echo $REMOTEURL
      #- REMOTEVERSION=$(curl $REMOTEURL | grep -Po "Version:\s?\s?\d\d?\.\d\d?\.?\d?\d?.*" | grep -Po "(\d\d?\.\d\d?\.?\d?\d?.*)")
      #- echo $REMOTEVERSION
      #- LOCALVERSION=$(cat style.css | grep -Po "Version:\s?\s?\d\d?\.\d\d?\.?\d?\d?.*" | grep -Po "(\d\d?\.\d\d?\.?\d?\d?.*)")
      #- echo $LOCALVERSION
      #- if [ $REMOTEVERSION != $LOCALVERSION ]; then echo "Wrong theme version - $REMOTEVERSION instead of $LOCALVERSION" && exit 1 ;fi
#      - sed -i "s/THEME_SLUG/$SUBDOMAIN/g" ./Gruntfile.js
#      - sed -i "s/WEBPAGETEST_API_KEY/$WEBPAGETEST_API_KEY/g" ./Gruntfile.js
#      - sed -i "s/PAGESPEED_API_KEY/$PAGESPEED_API_KEY/g" ./Gruntfile.js
      #- pa11y -V
      #- pa11y --ignore "warning;notice" http://$THEME_LOW.dev.limestreet.pl/
      #- pa11y --ignore "warning;notice" http://$THEME_LOW.dev.limestreet.pl/sample-page/
      #- pa11y --ignore "warning;notice" http://$THEME_LOW.dev.limestreet.pl/?s=post
      #- pa11y --ignore "warning;notice" http://$THEME_LOW.dev.limestreet.pl/?s=gergeafer
      #- pa11y --ignore "warning;notice" http://$THEME_LOW.dev.limestreet.pl/gergeafer
      #- pa11y --ignore "warning;notice" http://$THEME_LOW.dev.limestreet.pl/2013/01/10/markup-image-alignment/
      #- pa11y --ignore "warning;notice" http://$THEME_LOW.dev.limestreet.pl/2013/01/11/markup-html-tags-and-formatting/
      #- pa11y --ignore "warning;notice" http://$THEME_LOW.dev.limestreet.pl/category/aciform/
      #- pa11y --ignore "warning;notice" http://$THEME_LOW.dev.limestreet.pl/2012/01/03/template-comments/
      #- pa11y --ignore "warning;notice" http://$THEME_LOW.dev.limestreet.pl/author/patryk/
      #- pa11y --ignore "warning;notice" http://$THEME_LOW.dev.limestreet.pl/tag/template/
#      - grunt pagespeed
#      - grunt perfbudget
#    secrets: [ WEBPAGETEST_API_KEY, PAGESPEED_API_KEY ]
#    when:
#      event: push

  version_check_and_build:
    image: limestreet/apache-php-7
    commands:
      - TAG=`echo "$DRONE_TAG" | sed 's/^v//'`
      - echo $TAG
      - VERSION_LINE=$(grep -Po "Version:\s?\s?\d\d?\.\d\d?\.?\d?\d?.*" $PWD/style.css)
      #- echo $VERSION_LINE
      - VERSION=$(echo $VERSION_LINE | grep -Po "\d\d?\.\d\d?\.?\d?\d?.*")
      - echo $VERSION
      - if [ $TAG != $VERSION ]; then echo "Wrong theme/tag version - version from repo tag is $TAG but theme version from style.css is $THEMEVERSION" && exit 1 ;fi
      - grep -q "\[$VERSION\]" $PWD/CHANGELOG.md
      #- sed -i "s/$VERSION_LINE/Version:\ $VERSION.$DRONE_BUILD_NUMBER/" $PWD/scss/underscores/style.scss
      #- sed -i "s/$VERSION_LINE/Version:\ $VERSION.$DRONE_BUILD_NUMBER/" $PWD/style.css
      #- THEME_SLUG=$DRONE_REPO_NAME
      #- THEMEVERSION=$(cat style.css | grep -Po "Version:\s?\s?\d\d?\.\d\d?\.?\d?\d?.*" | grep -Po "(\d\d?\.\d\d?\.?\d?\d?.*)")
      #- echo $THEMEVERSION
      #- MAINTHEMEVERSION=`echo "$THEMEVERSION" | grep -Po "(^\d\d?\.\d\d?\.?\d?\d?)"`
      #- echo $TAG.$DRONE_BUILD_NUMBER
      #- if [ $TAG.$DRONE_BUILD_NUMBER != $THEMEVERSION ]; then echo "Wrong theme/tag version - version from repo tag (+ build number) is $TAG.$DRONE_BUILD_NUMBER but theme version from style.css is $THEMEVERSION" && exit 1 ;fi
      - grep -q "\[$VERSION\]" $PWD/CHANGELOG.md
      - apt-get update && apt-get install -y zip
      - npm install --silent
      - grunt
      - rm -rf *.yml .drone.yml .g* .j* .n* .v* scss sass node_modules vendor tests Gruntfile.js casper-tests.js package.json *.ruleset.xml nbproject *.rb *.tmp *.map css/*.map *.log Dockerfile
      - cd ..
      - zip -FSr $DRONE_REPO_NAME.zip $DRONE_REPO_NAME
      - mkdir -p $DRONE_REPO_NAME/dist
      - cp $DRONE_REPO_NAME.zip $DRONE_REPO_NAME/dist/$DRONE_REPO_NAME.zip
    when:
      event: tag

  github_release:
    image: plugins/github-release
    secrets: [ github_token ]
    files: dist/*
    when:
      event: tag
      #branch:
      #  - exclude: [master]

#  notify:
#    image: drillster/drone-email
#    from: noreply@limestreet.pl
#    recipients_only: true
#    subject: "{{repo.name}} tagged: {{tag}}"
#    body: "Link to repository: {{repo.link}}"
#    secrets: [ email_username, email_password, email_host, email_recipients ]
#    when:
#    event: tag

#  slack:
#    image: plugins/slack
#    webhook: https://hooks.slack.com/services/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
#    channel: general
#    when:
#      status: [ success ]
#      event: tag

branches:
  exclude: [master]
